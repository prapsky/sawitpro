---
openapi: 3.0.0
info:
  version: 1.0.0
  title: User Service
  license:
    name: MIT
servers:
  - url: http://localhost
tags:
  - name: User
    description: Operations about user
paths:
  /register:
    post:
      tags:
        - User
      summary: This endpoint is to register a new account.
      operationId: register
      requestBody:
        description: Register
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RegisterRequest"
      responses:
        "200":
          description: A successful response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RegisterResponse"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /login:
    post:
      tags:
        - User
      summary: This endpoint is to login to an account.
      operationId: login
      requestBody:
        description: Login
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/LoginRequest"
      responses:
        "200":
          description: A successful response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LoginResponse"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /profile:
    get:
      tags:
        - User
      summary: This endpoint is to view user profile.
      operationId: profile
      security:
        - bearerAuth: []
      responses:
        "200":
          description: A successful response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProfileResponse"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    ErrorResponse:
      type: object
      nullable: true
      properties:
        message:
          type: string
          example: Error
    RegisterRequest:
      type: object
      properties:
        phoneNumber:
          type: string
        fullName:
          type: string
        password:
          type: string
    RegisterResponse:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/RegisterResponseData"
    RegisterResponseData:
      type: object
      properties:
        userID:
          type: integer
          format: uint64
          example: 20
    LoginRequest:
      type: object
      properties:
        phoneNumber:
          type: string
        password:
          type: string
    LoginResponse:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/LoginResponseData"
    LoginResponseData:
      type: object
      properties:
        userID:
          type: integer
          format: uint64
          example: 20
        token:
          type: string
          example: 123abc
    ProfileResponse:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/ProfileResponseData"
    ProfileResponseData:
      type: object
      properties:
        fullName:
          type: string
          example: Jimi Hendrix
        phoneNumber:
          type: string
          example: +6285612345678
